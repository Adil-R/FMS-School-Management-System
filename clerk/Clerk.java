/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package clerk;

import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import selects.QueryClassDetails;
import sqlinserts.NewStudent;
import selects.QueryStudentDetails;
import sqlinserts.InsertStaffPic;
import sqlupdates.UpdateStaffPic;

/**
 *
 * @author franq
 */
public class Clerk extends javax.swing.JFrame {
    private static int currentSchooliIDdetails;
    private static int currentUserId;
    private ArrayList<String> classnames,residencenames,meals,transport;
    private java.util.Date today;
    private static int classid;
    private static Action getTransport;
    private static int selectedresidence;

    /**
     * Creates new form Clerk
     */
    public Clerk(int userid) {
       
        
        //createa action listener for the ente button
        Action enterAction = new AbstractAction()
        {
        @Override
        public void actionPerformed(ActionEvent e)
        {
        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manager.getFocusOwner().transferFocus();
        }
        };
        
        
        Action finishEnterAction = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
                jbuttonsavecontactsActionPerformed(e);
                        
            }
        };
        
         getTransport = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                String classidstr = cmbclass.getSelectedItem().toString();
                selects.QueryClassDetails.getClassNames();
                int classidid = selects.QueryClassDetails.listofnames.indexOf(classidstr);
                classid = Integer.parseInt(selects.QueryClassDetails.listofids.get(classidid).toString());
                transport = QueryStudentDetails.getTransportNames(classid);
                cmbtransport.setModel(new DefaultComboBoxModel(transport.toArray(new String[transport.size()])));       
            }
        };
        
        //cmbclass.addActionListener(getTransport);
         
        currentSchooliIDdetails=1;
        currentUserId = userid;
      
        initComponents();
        classnames = QueryClassDetails.getClassNames();
        cmbclass.setModel(new DefaultComboBoxModel(classnames.toArray(new String[classnames.size()])));
        residencenames = QueryStudentDetails.getResidenceNames();
        cmbresidence.setModel(new DefaultComboBoxModel(residencenames.toArray(new String[residencenames.size()])));
       
       
        
        //call the action listeners for the enter button from all textfields int the form
        tfmob.addActionListener(enterAction);
        tfemail.addActionListener(enterAction);
        tfpadd.addActionListener(enterAction);
        tftown.addActionListener(finishEnterAction);
        
        //initialize todays date
        today = new java.util.Date();
        hideForm2();
        
        this.setTitle("Frigate System - " + getUserTitle()  + " "+ getUserSurname());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentcontacts = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfemail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tftown = new javax.swing.JTextField();
        jbuttonsavecontacts = new javax.swing.JButton();
        jbuttoncancelcontacts = new javax.swing.JButton();
        tfmob = new javax.swing.JFormattedTextField();
        tfpadd = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        passportpanel = new javax.swing.JPanel();
        lblpassportpic = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        logopanel = new javax.swing.JPanel();
        logopic = new javax.swing.JLabel();
        jpaneladmintable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablenewstudent = new javax.swing.JTable();
        jbuttoncancelcontacts1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfsurnamename = new javax.swing.JTextField();
        tffirstname = new javax.swing.JTextField();
        tflastname = new javax.swing.JTextField();
        cmbclass = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jXDOB = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmbstaffgender1 = new javax.swing.JComboBox();
        cmbresidence = new javax.swing.JComboBox();
        cmbmeals = new javax.swing.JComboBox();
        cmbtransport = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jbtcancel = new javax.swing.JButton();
        jbtsave = new javax.swing.JButton();
        jScrollBar1 = new javax.swing.JScrollBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(setIcon());

        studentcontacts.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        studentcontacts.setForeground(new java.awt.Color(0, 0, 240));

        jLabel4.setForeground(new java.awt.Color(0, 0, 240));
        jLabel4.setText("Mobile");

        jLabel5.setForeground(new java.awt.Color(0, 0, 240));
        jLabel5.setText("Email Address");

        jLabel6.setForeground(new java.awt.Color(0, 0, 240));
        jLabel6.setText("Physical Address");

        jLabel7.setForeground(new java.awt.Color(0, 0, 240));
        jLabel7.setText("Town");

        jbuttonsavecontacts.setText("Save");
        jbuttonsavecontacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonsavecontactsActionPerformed(evt);
            }
        });

        jbuttoncancelcontacts.setText("Cancel");
        jbuttoncancelcontacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttoncancelcontactsActionPerformed(evt);
            }
        });

        try {
            tfmob.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####  ###  ###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfmob.setVerifyInputWhenFocusTarget(false);
        tfmob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfmobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentcontactsLayout = new javax.swing.GroupLayout(studentcontacts);
        studentcontacts.setLayout(studentcontactsLayout);
        studentcontactsLayout.setHorizontalGroup(
            studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentcontactsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentcontactsLayout.createSequentialGroup()
                        .addComponent(jbuttoncancelcontacts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbuttonsavecontacts))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentcontactsLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(75, 75, 75)
                        .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tftown)
                            .addComponent(tfmob, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)))
                    .addGroup(studentcontactsLayout.createSequentialGroup()
                        .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(studentcontactsLayout.createSequentialGroup()
                                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfemail, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                    .addComponent(tfpadd))))
                        .addGap(3, 3, 3)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        studentcontactsLayout.setVerticalGroup(
            studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentcontactsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfmob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfpadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tftown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(studentcontactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbuttonsavecontacts)
                    .addComponent(jbuttoncancelcontacts)))
        );

        // TODO add your handling code here:

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "My Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 240))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText(getUserJobTitle());

        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        passportpanel.setBackground(new java.awt.Color(255, 255, 255));
        passportpanel.setForeground(new java.awt.Color(255, 255, 255));

        lblpassportpic.setBackground(new java.awt.Color(0, 255, 255));
        lblpassportpic.setIcon(new javax.swing.ImageIcon(readImage()));
        passportpanel.add(lblpassportpic);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 204));
        jLabel23.setText(getSchoolName());

        logopanel.setForeground(new java.awt.Color(255, 255, 255));

        logopic.setIcon(new javax.swing.ImageIcon(readLogo()));
        logopanel.add(logopic);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(passportpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logopanel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passportpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logopanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(19, 19, 19))
        );

        jpaneladmintable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Students", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        tablenewstudent.setAutoCreateRowSorter(true);
        tablenewstudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablenewstudent.setCellSelectionEnabled(true);
        tablenewstudent.setFocusable(false);
        tablenewstudent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablenewstudentKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablenewstudent);

        jbuttoncancelcontacts1.setText("Refresh Details");
        jbuttoncancelcontacts1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttoncancelcontacts1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpaneladmintableLayout = new javax.swing.GroupLayout(jpaneladmintable);
        jpaneladmintable.setLayout(jpaneladmintableLayout);
        jpaneladmintableLayout.setHorizontalGroup(
            jpaneladmintableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneladmintableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbuttoncancelcontacts1)
                .addGap(27, 27, 27))
        );
        jpaneladmintableLayout.setVerticalGroup(
            jpaneladmintableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpaneladmintableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbuttoncancelcontacts1))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Register Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 240))); // NOI18N

        jLabel8.setForeground(new java.awt.Color(0, 0, 240));
        jLabel8.setText("Surname");

        jLabel10.setForeground(new java.awt.Color(0, 0, 240));
        jLabel10.setText("First Name");

        jLabel11.setForeground(new java.awt.Color(0, 0, 240));
        jLabel11.setText("Last Name");

        jLabel12.setForeground(new java.awt.Color(0, 0, 240));
        jLabel12.setText("Gender");

        cmbclass.setEnabled(true);
        cmbclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbclassActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(0, 0, 240));
        jLabel13.setText("Date of Birth");

        jXDOB.setEnabled(true);

        jLabel14.setForeground(new java.awt.Color(0, 0, 240));
        jLabel14.setText("Class");

        jLabel15.setForeground(new java.awt.Color(0, 0, 240));
        jLabel15.setText("Residence");

        jLabel16.setForeground(new java.awt.Color(0, 0, 240));
        jLabel16.setText("Meals");

        cmbstaffgender1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Male", "Female" }));
        cmbstaffgender1.setEnabled(true);

        cmbresidence.setEnabled(true);

        cmbmeals.setEnabled(true);

        cmbtransport.setEnabled(true);

        jLabel18.setForeground(new java.awt.Color(0, 0, 240));
        jLabel18.setText("Transport");

        jbtcancel.setText("Cancel");
        jbtcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtcancelActionPerformed(evt);
            }
        });

        jbtsave.setText("Save");
        jbtsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(56, 56, 56)
                        .addComponent(tffirstname))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(65, 65, 65)
                        .addComponent(tfsurnamename))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tflastname, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                .addGap(101, 101, 101)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbmeals, 0, 130, Short.MAX_VALUE)
                                    .addComponent(cmbresidence, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbstaffgender1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbclass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtcancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtsave))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                                .addComponent(cmbtransport, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tfsurnamename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(cmbclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbtransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tffirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cmbstaffgender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tflastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(cmbresidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtsave)
                    .addComponent(jbtcancel))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(cmbmeals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addComponent(jXDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem6.setText("Logout");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem5.setText("Refresh");
        jMenu1.add(jMenuItem5);

        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem14.setText("Student");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem14);

        jMenuItem15.setText("Fee");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);
        jMenu2.add(jSeparator2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Student");

        jMenuItem1.setText("Receive");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Edit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("View");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);
        jMenu3.add(jSeparator3);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Fee");

        jMenuItem7.setText("Pay");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("Balance");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Update");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);
        jMenu4.add(jSeparator4);

        jMenuBar1.add(jMenu4);

        jMenu6.setText("Transfer");

        jMenuItem13.setText("Student");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem13);
        jMenu6.add(jSeparator5);

        jMenuBar1.add(jMenu6);

        jMenu8.setText("Search");

        jMenuItem11.setText("Student");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem11);

        jMenuItem12.setText("Payment Details");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem12);
        jMenu8.add(jSeparator6);

        jMenuBar1.add(jMenu8);

        jMenu7.setText("Settings");

        jMenuItem17.setText("Change Password");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem17);

        jMenuItem18.setText("View Details");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem18);

        jMenuItem16.setText("Set Profile Picture");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem16);

        jMenuItem19.setText("Change Profile Picture");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem19);
        jMenu7.add(jSeparator7);

        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentcontacts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 56, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpaneladmintable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpaneladmintable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentcontacts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        
        SearchStudent searchStudent = new SearchStudent(currentUserId);
        searchStudent.main(new String[9]);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jbuttonsavecontactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonsavecontactsActionPerformed

        // TODO add your handling code here:
        String strmob,strphadd,stremail,strtown;
        strmob = tfmob.getText().toUpperCase();
        strphadd = tfpadd.getText().toUpperCase();
        stremail = tfemail.getText().toUpperCase();
        strtown = tftown.getText().toUpperCase();

        //check whether user input is null
        if(strmob == null || "".equals(strmob)||"              ".equals(strmob))
        {
            JOptionPane.showMessageDialog(null,
                "Please Enter the Mobile Phone Number to Continue", "Warning",JOptionPane.WARNING_MESSAGE);

        }
        else if(stremail==null||"".equals(stremail))
        {
            JOptionPane.showMessageDialog(null,
                "Please Enter the Email Address to Continue\n"+
                    "If not available enter N/A","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(strphadd == null||"".equals(strphadd)|| "      -      ".equals(strphadd))
        {
            JOptionPane.showMessageDialog(null,
                "Please Enter the Staffs' Physical Address to Continue\n"+
                "Enter the School Address if missing", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(strtown==null||"".equals(strtown) )
        {
            JOptionPane.showMessageDialog(null,
                "Please Enter the Staffs' Town Details to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{

            try {
                int call = NewStudent.setStudentContacts(strmob, stremail, strphadd, strtown);
                if(call == 1)
                {
                    JOptionPane.showMessageDialog(null, "Student Contacts successfylly saved\n","Success", JOptionPane.INFORMATION_MESSAGE);
                    

                    hideForm1();
                    ResetForm2();
                    unHideForm2();

                }

            } catch (SQLException ex) {
                Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);

               
                JOptionPane.showMessageDialog(null, "Some unexpected error occured \n" +
                        "Please contact the system administrator", "Error ", JOptionPane.ERROR_MESSAGE);
            }
                
        }

    }//GEN-LAST:event_jbuttonsavecontactsActionPerformed

    private void jbuttoncancelcontactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttoncancelcontactsActionPerformed
        // TODO add your handling code here:
        resetContactsForm();
    }//GEN-LAST:event_jbuttoncancelcontactsActionPerformed

    private void tfmobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfmobActionPerformed

    }//GEN-LAST:event_tfmobActionPerformed

    private void tablenewstudentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablenewstudentKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablenewstudentKeyPressed

    private void jbuttoncancelcontacts1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttoncancelcontacts1ActionPerformed
        // TODO add your handling code here:
        updateTable();

    }//GEN-LAST:event_jbuttoncancelcontacts1ActionPerformed

    private void jbtcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtcancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtcancelActionPerformed

    private void jbtsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtsaveActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        String surname, firstname, lastname,gender, dob, residenceidstr, mealsidstr, transportidstr;
        int residenceid,mealsid,transportid, registeredby;
        
        
       surname = tfsurnamename.getText().toUpperCase();
       firstname = tffirstname.getText().toUpperCase();
       lastname = tflastname.getText().toUpperCase();
       gender = cmbstaffgender1.getSelectedItem().toString().toUpperCase();
       
       java.util.Date utildate = jXDOB.getDate();
       java.sql.Date sqldate = new java.sql.Date(utildate.getYear(),utildate.getMonth(),utildate.getDate());
       java.sql.Date todaysqldate = new java.sql.Date(today.getYear(), today.getMonth(), today.getDate());
       dob = sqldate.toString().toUpperCase();
       
       //get the names of tehse variable below
       
       residenceidstr = cmbresidence.getSelectedItem().toString();
       selectedresidence = cmbresidence.getSelectedIndex();
       mealsidstr = cmbmeals.getSelectedItem().toString();
       transportidstr = cmbtransport.getSelectedItem().toString();
       registeredby = currentUserId;
       
        //get the spefic ids
       
       
       
       int residenceidid = selects.QueryStudentDetails.resdnames.indexOf(residenceidstr);
       residenceid = Integer.parseInt(selects.QueryStudentDetails.resids.get(residenceidid).toString());
       
       selects.QueryMealsDetails.getMealDetails();
       int mealsidid = selects.QueryMealsDetails.listofnames.indexOf(mealsidstr);
       mealsid = Integer.parseInt(selects.QueryMealsDetails.listofids.get(mealsidid).toString());
       
       
       int transportidid = selects.QueryStudentDetails.transnames.indexOf(transportidstr);
       transportid = Integer.parseInt(selects.QueryStudentDetails.transids.get(transportidid).toString());
       
       if("".equals(surname))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Surname to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("".equals(firstname))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter First Name to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("".equals(lastname))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Last Name to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("Select".equals(gender))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Gender to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("Select".equals(transportidstr))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Transport Details to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
        else if("".equals(dob)||dob==null||sqldate==todaysqldate)
        {
            JOptionPane.showMessageDialog(null,
                        "Please Enter Date of Birth to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
        }
       else if(cmbclass.getSelectedIndex()==0)
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Class Details to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("Select".equals(residenceidstr))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Residence Details to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else if("Select".equals(mealsidstr))
       {
           JOptionPane.showMessageDialog(null,
                        "Please Enter Meals Details to Continue\n", "Warning",JOptionPane.WARNING_MESSAGE);
       }
       else
       {
         try {
             sqlinserts.NewStudent.createNewStudent(surname, firstname, lastname,gender,dob,classid,residenceid,mealsid,transportid, registeredby);
             if(selectedresidence != 1)
             {
                double feerequiredborders =  frigfactor.TotalFeeBorders.getTotalFeeBorders(residenceid, classid, cmbmeals.getSelectedItem().toString());
                sqlinserts.NewStudentFee.createBorderFee(feerequiredborders);
             }
             else
             {
                 double feerequieddayschoolars = frigfactor.TotalFeeDaySchool.getTotalFeeDayScholars(classid, cmbmeals.getSelectedItem().toString());
                 sqlinserts.NewStudentFee.createDayScholarFee(feerequieddayschoolars);
             }
             
             
             JOptionPane.showMessageDialog(null,
                        "Student Details Saved\n"
                     + "Press Ok to Continue", "Success",JOptionPane.INFORMATION_MESSAGE);
             updateTable();
             
             hideForm2();
             ResetForm1();
             unHideForm1();
            
             
         } catch (SQLException ex) {
             Logger.getLogger(NewStudent.class.getName()).log(Level.SEVERE, null, ex);
             if(ex.getErrorCode() == 1062)
                {
                JOptionPane.showMessageDialog(null, "These Student Details have Already Been Saved Before. \n" +
                        "Press Ok to continue", "Warning "+ex.getErrorCode(), JOptionPane.WARNING_MESSAGE);
                }
                else
                {
                JOptionPane.showMessageDialog(null, "Some unexpected error occured \n" +
                        "Please contact the system administrator", "Error ", JOptionPane.ERROR_MESSAGE);
                 
                }
         }
       }
    }//GEN-LAST:event_jbtsaveActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
        int confirm = JOptionPane.showConfirmDialog(null, "You are About to Exit The System\n" +
                        "", "Confirm", JOptionPane.OK_CANCEL_OPTION);
        if(confirm == JOptionPane.OK_OPTION)
        {
        System.exit(0);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        main.LogOut.LogOut(this);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        PayFee payFee = new PayFee(currentUserId);
        payFee.main(new String[9]);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void cmbclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbclassActionPerformed
                String classidstr = cmbclass.getSelectedItem().toString();
                selects.QueryClassDetails.getClassNames();
                int classidid = selects.QueryClassDetails.listofnames.indexOf(classidstr);
                classid = Integer.parseInt(selects.QueryClassDetails.listofids.get(classidid).toString());
                transport = QueryStudentDetails.getTransportNames(classid);
                cmbtransport.setModel(new DefaultComboBoxModel(transport.toArray(new String[transport.size()]))); 
                
                
                 meals = QueryStudentDetails.getMealsNames(classid);
                 cmbmeals.setModel(new DefaultComboBoxModel(meals.toArray(new String[meals.size()])));
    }//GEN-LAST:event_cmbclassActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        main.LogOut.LogOut(this);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "You are About to Exit The System\n" +
                        "", "Confirm", JOptionPane.OK_CANCEL_OPTION);
        if(confirm == JOptionPane.OK_OPTION)
        {
        System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        SearchStudent searchStudent = new SearchStudent(currentUserId);
        searchStudent.main(new String[9]);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        NewStudentcontacts newStudentcontacts = new NewStudentcontacts(currentUserId);
        newStudentcontacts.main(new String[9]);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
         // TODO add your handling code here:
        PayFee payFee = new PayFee(currentUserId);
        payFee.main(new String[9]);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        SearchViewStudentBalance svsb = new SearchViewStudentBalance(currentUserId);
        svsb.main(new String[9]);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
       SearchStudent searchStudent = new SearchStudent(currentUserId);
       searchStudent.main(new String[9]);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        try {
            InsertStaffPic ins = new InsertStaffPic(currentUserId);
        }
        catch(SQLException ex)
        {
            ex.printStackTrace();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
       // TODO add your handling code here:
        main.ChangePassword changePassword = new main.ChangePassword(currentUserId);
        changePassword.main(new String[9]);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        try {
            UpdateStaffPic updateStaffPic = new UpdateStaffPic(currentUserId);
            this.updateProfile();
        }
        catch(SQLException ex)
        {
            ex.printStackTrace();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        ViewAllStudents viewAllStudents = new ViewAllStudents();
        viewAllStudents.main(new String[9]);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        SearchReceipt searchReceipt = new SearchReceipt(currentUserId);
        searchReceipt.main(new String[9]);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        SearchViewStudentBalance svsb = new SearchViewStudentBalance(currentUserId);
        svsb.main(new String[9]);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
         SearchTransferStudent searchTransferStudent = new  SearchTransferStudent(currentUserId);
        searchTransferStudent.main(new String[9]);
                
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Clerk(currentUserId).setVisible(true);
                updateTable();
            }
        });
    }
      public  void updateProfile(){
        //update the profile pic
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                lblpassportpic.setIcon(new javax.swing.ImageIcon(readImage()));
                passportpanel.add(lblpassportpic);

            }
        });
    }
    
     //iimage reader function
    private BufferedImage readImage()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String sql = "SELECT `passport` FROM `staff_passport` WHERE `staffID` = ?";
        
        BufferedImage bufImg = null;
        try {
            pstmt = conn.prepareStatement(sql);
            //should get the id of the current user and give it to 1
            pstmt.setInt(1, currentUserId);
            ResultSet rs = pstmt.executeQuery();
            
            rs.next();
            InputStream in = rs.getBinaryStream("passport"); 
             bufImg = ImageIO.read(in); 
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return bufImg;
    }
    private BufferedImage setIcon()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String sql = "SELECT `icon` FROM `icon` WHERE 1";
        
        BufferedImage bufImg = null;
        try {
            pstmt = conn.prepareStatement(sql);
            //should get the id of the current user and give it to 1
            ResultSet rs = pstmt.executeQuery();
            
            rs.next();
            InputStream in = rs.getBinaryStream("icon"); 
             bufImg = ImageIO.read(in); 
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return bufImg;
    }
    
    //method to reset form1 contacts
   private void resetContactsForm()
    {
         //reset on cancel
        tfmob.setText("");
        tfemail.setText("");
        tfpadd.setText("");
        tftown.setText("");
    }
     
    private static String getSchoolName()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String schoolname= "";
        String sql = "SELECT `Name` FROM `school_details` WHERE `ID` = ?";
        try {
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, currentSchooliIDdetails);
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            schoolname = rs.getString("Name");
            
        
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "Some unexpected error occured \nSchool Name Details not found\n" +
                        "Please contact the system administrator", "Error "+ex.getErrorCode(), JOptionPane.INFORMATION_MESSAGE);
        }
        return schoolname;
    }
      
    private String getUserTitle()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String userTitle= "";
        String sql = "SELECT `Title` FROM `staff` WHERE `ID` = ?";
        try {
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, currentUserId);
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            userTitle = rs.getString("Title");
            
        
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "Some unexpected error occured \n User Details not found\n" +
                        "Please contact the system administrator", "Error "+ex.getErrorCode(), JOptionPane.INFORMATION_MESSAGE);
        }
        return userTitle;
    }
       
    private String getUserSurname()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String userTitl= "";
        String sql = "SELECT `Surname`,`First Name` FROM `staff` WHERE `ID` = ?";
        try {
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, currentUserId);
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            userTitl = rs.getString("Surname")+" "+rs.getString("First Name");
            
            
        
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "Some unexpected error occured \n User Details not found\n" +
                        "Please contact the system administrator", "Error "+ex.getErrorCode(), JOptionPane.INFORMATION_MESSAGE);
        }
        return userTitl;
    }
      private String getUserJobTitle()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String userTitl= "";
        String sql = "SELECT `Job Title` FROM `staff` WHERE `ID` = ?";
        try {
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, currentUserId);
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            userTitl = rs.getString("Job Title");
            
        
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "Some unexpected error occured \n User Details not found\n" +
                        "Please contact the system administrator", "Error "+ex.getErrorCode(), JOptionPane.INFORMATION_MESSAGE);
        }
        return userTitl;
    }
      
      
      
       //update table 
    public static void updateTable()
    {
            DBConnection dbconn =new DBConnection();
            Connection conn = dbconn.vconnection;
            PreparedStatement pstmt;
            ResultSet rs;
            String Sql = "SELECT `student`.`ID`, `student`.`surname`,`student`.`First Name`,`student`.`Last Name`,`student`.`Gender`,`class`.`Level`,`class`.`Class` \n" +
                "FROM `student`\n" +
                "INNER JOIN `class`\n" +
                "ON `class`.`ID` = `student`.`classID`\n" +
                "WHERE `student`.`Whether Student`=1\n" +
                "ORDER BY `student`.`ID` DESC LIMIT 20";
        try {
            pstmt = conn.prepareStatement(Sql);
            rs = pstmt.executeQuery();
            tablenewstudent.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }
    
    private void hideForm2()
    {
        tfsurnamename.setEnabled(false);
        tffirstname.setEnabled(false);
        tflastname.setEnabled(false);
        cmbstaffgender1.setEnabled(false);
        jXDOB.setEnabled(false);
        cmbclass.setEnabled(false);
        cmbresidence.setEnabled(false);
        cmbmeals.setEnabled(false);
        cmbtransport.setEnabled(false);
        jbtsave.setEnabled(false);
        jbtcancel.setEnabled(false);
                
    }
    private void unHideForm2()
    {
        tfsurnamename.setEnabled(true);
        tffirstname.setEnabled(true);
        tflastname.setEnabled(true);
        cmbstaffgender1.setEnabled(true);
        jXDOB.setEnabled(true);
        cmbclass.setEnabled(true);
        cmbresidence.setEnabled(true);
        cmbmeals.setEnabled(true);
        cmbtransport.setEnabled(true);
        jbtsave.setEnabled(true);
        jbtcancel.setEnabled(true);
                
    }
     private void ResetForm2()
    {
        tfsurnamename.setText("");
        tffirstname.setText("");
        tflastname.setText("");
        cmbstaffgender1.setSelectedIndex(0);
        jXDOB.setDate(null);
        cmbclass.setSelectedIndex(0);
        cmbresidence.setSelectedIndex(0);
        cmbmeals.setSelectedIndex(0);
        cmbtransport.setSelectedIndex(0);               
    }
    
    private void hideForm1()
    {
        //disable the objects of he staff contacts panel
                    tfmob.setEnabled(false);
                    tfpadd.setEnabled(false);
                    tfemail.setEnabled(false);
                    tftown.setEnabled(false);
                    jbuttoncancelcontacts.setEnabled(false);
                    jbuttonsavecontacts.setEnabled(false);
    }
    private void unHideForm1()
    {
                    //enable the objects of he staff contacts panel
                    tfmob.setEnabled(true);
                    tfpadd.setEnabled(true);
                    tfemail.setEnabled(true);
                    tftown.setEnabled(true);
                    jbuttoncancelcontacts.setEnabled(true);
                    jbuttonsavecontacts.setEnabled(true);
    }
    
    private void ResetForm1()
    {
                    //enable the objects of he staff contacts panel
                    tfmob.setText("              ");
                    tfpadd.setText("");
                    tfemail.setText("");
                    tftown.setText("");
     }
   
    
     private static BufferedImage readLogo()
    {
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        PreparedStatement pstmt;
        String sql = "SELECT `logo` FROM `syslogo` WHERE 1";
        
        BufferedImage bufImg = null;
        try {
            pstmt = conn.prepareStatement(sql);
            //should get the id of the current user and give it to 1
            
            ResultSet rs = pstmt.executeQuery();
            
            rs.next();
            InputStream in = rs.getBinaryStream("logo"); 
             bufImg = ImageIO.read(in); 
        } catch (SQLException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Clerk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return bufImg;
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbclass;
    private javax.swing.JComboBox cmbmeals;
    private javax.swing.JComboBox cmbresidence;
    private javax.swing.JComboBox cmbstaffgender1;
    private javax.swing.JComboBox cmbtransport;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private com.toedter.calendar.JDateChooser jXDOB;
    private javax.swing.JButton jbtcancel;
    private javax.swing.JButton jbtsave;
    private javax.swing.JButton jbuttoncancelcontacts;
    private javax.swing.JButton jbuttoncancelcontacts1;
    private javax.swing.JButton jbuttonsavecontacts;
    private javax.swing.JPanel jpaneladmintable;
    private javax.swing.JLabel lblpassportpic;
    private javax.swing.JPanel logopanel;
    private javax.swing.JLabel logopic;
    private javax.swing.JPanel passportpanel;
    private javax.swing.JPanel studentcontacts;
    private static javax.swing.JTable tablenewstudent;
    private javax.swing.JTextField tfemail;
    private javax.swing.JTextField tffirstname;
    private javax.swing.JTextField tflastname;
    private javax.swing.JFormattedTextField tfmob;
    private javax.swing.JTextField tfpadd;
    private javax.swing.JTextField tfsurnamename;
    private javax.swing.JTextField tftown;
    // End of variables declaration//GEN-END:variables
}
