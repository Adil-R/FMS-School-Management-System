/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Teacher;

import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import selects.QueryClassDetails;
import selects.QueryExamDetails;
import superadmin.ViewStaff;

/**
 *
 * @author franq
 */
public class ViewResults extends javax.swing.JFrame {

    /**
     * Creates new form ViewResults
     */
    
    private static int currentUserId;
    private ArrayList<String> classestaught;
    private ArrayList<String> subjectstaught;
    private ArrayList<String> exams;
    
    private static int classTaughtID;
    private static int subjecttaughtID;
    private static int examId;
    private static int subject_teacher_classID;
    private Action enterAction;
    private Action finishEnterAction;
    
    
    
    public ViewResults(int user) {
        constructor(user);
    }

    private void constructor(int currentuser)
    {
        
        enterAction = new AbstractAction()
        {
        @Override
        public void actionPerformed(ActionEvent e)
        {
        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manager.getFocusOwner().transferFocus();
        }
        };
        
         finishEnterAction = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
                btnentermarksActionPerformed(e);
                        
            }
        };
        
    
        
        currentUserId = currentuser;
        
        initComponents();
        this.btnprint.setEnabled(false);
        
        //get the subjects taught from the database
        classestaught = QueryExamDetails.getClassesTaught(currentUserId);
        cmbResulstsClass.setModel(new DefaultComboBoxModel(classestaught.toArray(new String[classestaught.size()])));
        
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnentermarks = new javax.swing.JButton();
        cmbexams = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cmbResulstsSubject = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cmbResulstsClass = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jbtcancel2 = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablemarksentry = new javax.swing.JTable();
        jbtcancel3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Exam Results");
        setIconImage(selects.QueryMainDetails.setIcon());
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 240));
        jLabel6.setText("Select Exam Details");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnentermarks.setText("View Marks");
        btnentermarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnentermarksActionPerformed(evt);
            }
        });

        cmbexams.setEnabled(false);
        cmbexams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbexamsActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(0, 0, 240));
        jLabel7.setText("Exam");

        cmbResulstsSubject.setEnabled(false);
        cmbResulstsSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbResulstsSubjectActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 0, 240));
        jLabel5.setText("Subject");

        cmbResulstsClass.setEnabled(true);
        cmbResulstsClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbResulstsClassActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 240));
        jLabel4.setText("Class");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(cmbResulstsClass, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel5)
                .addGap(32, 32, 32)
                .addComponent(cmbResulstsSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel7)
                .addGap(39, 39, 39)
                .addComponent(cmbexams, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnentermarks)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnentermarks)
                    .addComponent(cmbexams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cmbResulstsSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbResulstsClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jbtcancel2.setText("Reset");
        jbtcancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtcancel2ActionPerformed(evt);
            }
        });

        btnprint.setText("Print Record");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });

        tablemarksentry.setAutoCreateRowSorter(true);
        tablemarksentry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Surname", "First Name", "Last Name","Gender","Marks"
            }
        ));
        jScrollPane1.setViewportView(tablemarksentry);

        jbtcancel3.setText("Ok");
        jbtcancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtcancel3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jbtcancel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtcancel3)
                .addGap(330, 330, 330)
                .addComponent(btnprint)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(395, 395, 395))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtcancel2)
                    .addComponent(btnprint)
                    .addComponent(jbtcancel3)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnentermarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnentermarksActionPerformed
        // TODO add your handling code here:
        btnprint.setEnabled(true);
        updateMarksEntryTable();
        tablemarksentry.setEnabled(false);
        
    }//GEN-LAST:event_btnentermarksActionPerformed

    private void cmbexamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbexamsActionPerformed
        // TODO add your handling code here:
        try {
            examId = QueryExamDetails.getExamID(cmbexams.getSelectedItem().toString());
            cmbexams.addActionListener(finishEnterAction);
        } catch (SQLException ex) {
            Logger.getLogger(Teacher.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                "Some unexpected error occured\n"+
                "Was not able to load Exam Details\n"+
                "Please Contact System Admin for Assistance","Error Message",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmbexamsActionPerformed

    private void cmbResulstsSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbResulstsSubjectActionPerformed
        // TODO add your handling code here:
        String subjectname = cmbResulstsSubject.getSelectedItem().toString().toUpperCase();
        try {

            int subjecttaughtIDid = selects.QueryExamDetails.subjecttaughtnames.indexOf(subjectname);
            subjecttaughtID = Integer.parseInt(selects.QueryExamDetails.subjecttaughtids.get(subjecttaughtIDid).toString());
            exams = QueryExamDetails.getExamDetails();
            cmbexams.setEnabled(true);
            cmbexams.setModel(new DefaultComboBoxModel(exams.toArray(new String[exams.size()])));

        } catch (Exception ex) {
            Logger.getLogger(EditMarks.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                "Some unexpected error occured\n"+
                "Was not able to load Exam Details\n"+
                "Please Select Subject Details first","Error Message",JOptionPane.ERROR_MESSAGE);
            cmbexams.setEnabled(false);
        }
    }//GEN-LAST:event_cmbResulstsSubjectActionPerformed

    private void cmbResulstsClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbResulstsClassActionPerformed
        // TODO add your handling code here:
        String classname = cmbResulstsClass.getSelectedItem().toString();
        try {
            selects.QueryClassDetails.getClassNames();
            int classTaughtIDid = QueryClassDetails.listofnames.indexOf(classname);
            classTaughtID = Integer.parseInt(QueryClassDetails.listofids.get(classTaughtIDid).toString());

            subjectstaught = QueryExamDetails.getSubjectTaught(currentUserId,classTaughtID);
            cmbResulstsSubject.setModel(new DefaultComboBoxModel(subjectstaught.toArray(new String[subjectstaught.size()])));
            cmbResulstsSubject.setEnabled(true);
            cmbResulstsClass.addActionListener(enterAction);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                "Some unexpected error occured\n"+
                "Was not able to load Subject name details\n"+
                "Please Select Class  First","Error Message",JOptionPane.ERROR_MESSAGE);
            cmbResulstsSubject.setEnabled(false);
            cmbexams.setEnabled(false);
        }
    }//GEN-LAST:event_cmbResulstsClassActionPerformed

    private void jbtcancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtcancel2ActionPerformed
        // TODO add your handling code here:
        this.reset();
    }//GEN-LAST:event_jbtcancel2ActionPerformed

    private  void reset()
    {
        this.cmbResulstsSubject.setEnabled(false);
        this.tablemarksentry.setEnabled(false);
        this.cmbexams.setEnabled(false);
        this.cmbResulstsClass.setSelectedIndex(0);
        
        tablemarksentry.setModel(new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
    },
    new String [] {
        "ID", "Surname", "First Name", "Last Name","Gender","Marks"
    }
));
}
    
    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
     // TODO add your handling code here:
        DBConnection dbconn =new DBConnection();
        Connection conn = dbconn.vconnection;
        
        try {
            //String report = "C:\\Users\\franq\\Documents\\NetBeansProjects\\Frigate management System 1.0.1\\report\\student.jrxml";
            
            JasperDesign jd = JRXmlLoader.load("report\\subjectresult.jrxml");
            
            String sql = "SELECT  `student`.`ID` ,  `student`.`surname` ,  `student`.`First Name` ,  `student`.`Last Name` ,  `student`.`Gender`,`exam_result`.`Marks`\n" +
                  "FROM  `student` INNER JOIN  `exam_result`\n" +
                  "ON  `student`.`ID` =  `exam_result`.`studentID` \n" +
                  "WHERE  `student`.`classID`=" +classTaughtID +
                  " AND  `exam_result`.`examID`=" + examId +
                  " AND  `exam_result`.`subject_teacher_classID`=" +subject_teacher_classID +
                  " AND  `exam_result`.`subjectID`=" +subjecttaughtID +
                  " AND  `exam_result`.`Activate`=FALSE \n" +
                  "ORDER BY `student`.`ID` ASC ";
            
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            Logger.getLogger(ViewStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnprintActionPerformed

    private void jbtcancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtcancel3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtcancel3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewResults(currentUserId).setVisible(true);
            }
        });
    }
    
     //update table 
    private static void updateMarksEntryTable()
    {
            DBConnection dbconn =new DBConnection();
            Connection conn = dbconn.vconnection;
            PreparedStatement pstmt;
            subject_teacher_classID = selects.QuerySubjectClassTeacher.getClass_TeacherID(subjecttaughtID,  currentUserId, classTaughtID);
            ResultSet rs;
            String Sql= "";
            
            Sql = "SELECT  `student`.`ID` ,  `student`.`surname` ,  `student`.`First Name` ,  `student`.`Last Name` ,  `student`.`Gender`,`exam_result`.`Marks`\n" +
                  "FROM  `student` INNER JOIN  `exam_result`\n" +
                  "ON  `student`.`ID` =  `exam_result`.`studentID` \n" +
                  "WHERE  `student`.`classID` =?\n" +
                  "AND  `exam_result`.`examID` =?\n" +
                  "AND  `exam_result`.`subject_teacher_classID` =?\n" +
                  "AND  `exam_result`.`subjectID` =?\n" +
                  "AND  `exam_result`.`Activate` = \n" +
                  "FALSE \n" +
                  "ORDER BY  `ID` ";
        try {
            pstmt = conn.prepareStatement(Sql);
            pstmt.setInt(1, classTaughtID);
            pstmt.setInt(2, examId);
            pstmt.setInt(3, subject_teacher_classID);
            pstmt.setInt(4,subjecttaughtID);
            
             
            
            rs = pstmt.executeQuery();
            TableModel model = DbUtils.resultSetToTableModel(rs);
            tablemarksentry.setModel(model);
            
        } catch (SQLException ex) {
            Logger.getLogger(Teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnentermarks;
    private javax.swing.JButton btnprint;
    private javax.swing.JComboBox cmbResulstsClass;
    private javax.swing.JComboBox cmbResulstsSubject;
    private javax.swing.JComboBox cmbexams;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtcancel2;
    private javax.swing.JButton jbtcancel3;
    private static javax.swing.JTable tablemarksentry;
    // End of variables declaration//GEN-END:variables
}
